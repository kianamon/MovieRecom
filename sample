set.seed(1)
assignment <- sample(1:3, size = nrow(df_train), prob =c(0.7, 0.15, 0.15), replace = TRUE)
df_train1 <- df_train[assignment == 1, ]   # subset valid
df_valid <- df_train[assignment == 2, ]   # subset valid
df_test1 <- df_train[assignment == 3, ]   # subset test   

# Train  model
model1 <- rpart(Activity ~ .-Id, df_train1,
                    method = "class") 

rpart.plot(x =model1, 
           yesno = 2,
           type = 0,
           extra = 0)
#  predictions  test set
pred1 <- predict(object = model1,  
                newdata =df_test1, type = "class")

confMat2 <- table(df_test1$Activity,pred1)
accuracy <- sum(diag(confMat2))/sum(confMat2)


plotcp(model1)
print(model1$cptable)
opt_index <- which.min(model1$cptable[, "xerror"])
cp_opt <- model1$cptable[opt_index, "CP"]


model1_opt <- prune(tree = model1, 
                        cp = cp_opt)

# Plot the optimized model
rpart.plot(x = model1_opt, yesno = 2, type = 0, extra = 0)
minsplit <- seq(1, 4, 1)
maxdepth <- seq(1, 6, 1)

hyper_grid <- expand.grid(minsplit = minsplit, maxdepth = maxdepth)

# Verification
head(hyper_grid)

nrow(hyper_grid)  

num_models <- nrow(hyper_grid)

models01 <- list()

for (i in 1:num_models) {
  
  # Get minsplit, maxdepth values at row i
  minsplit <- hyper_grid$minsplit[i]
  maxdepth <- hyper_grid$maxdepth[i]
  
  # Train a model and store in the list
  models01[[i]] <- rpart(formula = Activity ~ .-Id, 
                            data = df_train1, 
                            method = "class",
                            minsplit = minsplit,
                            maxdepth = maxdepth)
}  
accuracy <- c()
for (i in 1:num_models) {
  
 
  model2 <- models01[[i]]
  
  # Generate predictions on grade_valid 
  pred2 <- predict(object = model2,
                  newdata = df_valid, type = "class")
  confMat <- table(df_valid$Activity, pred2)
  accuracy[i] <- sum(diag(confMat))/sum(confMat)
  
}

best_model <- models01[[which.max(accuracy)]]

model2$control

dt_pred <- predict(object = best_model,
                   newdata = df_test1, type = "class")

confMat3 <- table(df_test1$Activity, dt_pred)
sum(diag(confMat3))/sum(confMat3)
